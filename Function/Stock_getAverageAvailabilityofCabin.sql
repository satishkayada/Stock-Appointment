USE [srk_db]
GO

/****** Object:  UserDefinedFunction [Stock].[getAverageAvailabilityofCabin]    Script Date: 21/01/2018 4:30:50 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/*
Create By Satish Kayada
Create Date 20/1/2018
Description : This Function use to get Average Avalability of Section
*/
CREATE FUNCTION [Stock].[getAverageAvailabilityofCabin](@view_date AS DATE=NULL,@cabin_code TINYINT)
RETURNS NUMERIC(8,2)
AS 
BEGIN

	DECLARE @CurrentTime AS TIME

	DECLARE @DayEndTime AS Time
	
	DECLARE @DurationValue AS INT

	SELECT @DurationValue=DURATION_VALUE
	FROM Master.DURATION_MASTER
	WHERE DURATION_TYPE_CODE=Stock.getDurationType('time_interval')
	SET @cabin_code=ISNULL(@cabin_code,0)
	SET @CurrentTime=DATEADD(HOUR,0,CAST(dbo.SOL_GetISTDATETIME() AS TIME))
	DECLARE @TodayDate AS DATE;
	DECLARE @CabinPercentage AS NUMERIC(4,2)
	SET @TodayDate=CASE WHEN(@View_Date IS NULL) THEN dbo.SOL_GetISTDATETIME() ELSE @View_Date eND

	SELECT @DayEndTime=TO_TIME 
	FROM Master.SCHEDULE_MASTER
		LEFT JOIN Master.DAYS_MASTER ON DAYS_MASTER.DAY_ID = SCHEDULE_MASTER.DAY_ID
	WHERE Master.DAYS_MASTER.DAY_NAME=DATENAME(dw,@TodayDate)

	DECLARE @RemTime AS NUMERIC(8,2)
	DECLARE @occupyTime AS NUMERIC(8,2)

	SELECT 
	@RemTime=
	CASE WHEN(
	DATEDIFF(MINUTE,@CurrentTime,SCHEDULE_MASTER.TO_TIME)>0
			 ) THEN 
			 DATEDIFF(MINUTE,@CurrentTime,SCHEDULE_MASTER.TO_TIME)
			ELSE 0 
	END 
	FROM Master.SECTION_MASTER
		LEFT JOIN Master.CABIN_SLOT_MASTER ON CABIN_SLOT_MASTER.CABIN_CODE = SECTION_MASTER.CABIN_CODE
		LEFT JOIN Master.SCHEDULE_MASTER ON SCHEDULE_MASTER.SCHEDULE_CODE = CABIN_SLOT_MASTER.SCHEDULE_CODE
		LEFT JOIN Master.DAYS_MASTER ON DAYS_MASTER.DAY_ID = SCHEDULE_MASTER.DAY_ID
	WHERE SECTION_MASTER.IS_ACTIVE=1
	AND Master.CABIN_SLOT_MASTER.IS_ACTIVE=1
	AND Master.SCHEDULE_MASTER.IS_ACTIVE=1
	AND Master.DAYS_MASTER.IS_ACTIVE=1
	AND Master.DAYS_MASTER.DAY_NAME=DATENAME(dw,dbo.SOL_GetISTDATETIME())
	AND (@cabin_code=0 OR CABIN_SLOT_MASTER.CABIN_CODE=@cabin_code)	

	SELECT 
		@occupyTime=
			SUM(
				DATEDIFF(MINUTE,
	CASE WHEN (@CurrentTime>OccupyTime.SECTION_SLOT_FROM_TIME) THEN @CurrentTime ELSE OccupyTime.SECTION_SLOT_FROM_TIME END,
	CASE WHEN (@CurrentTime>OccupyTime.SECTION_SLOT_TO_TIME) THEN @CurrentTime   ELSE 
								CASE WHEN(DATEADD(MINUTE,@DurationValue,SECTION_SLOT_TO_TIME)>@DayEndTime) THEN @DayEndTime ELSE DATEADD(MINUTE,@DurationValue,SECTION_SLOT_TO_TIME) END 
							END 
				   ) 
			   )
	FROM (
			SELECT DISTINCT VISIT_DETAIL.VISIT_ID,SECTION_SLOT_FROM_TIME,SECTION_SLOT_TO_TIME
			FROM Stock.VISIT_DETAIL
				INNER JOIN Stock.VISIT ON VISIT.VISIT_ID = VISIT_DETAIL.VISIT_ID
			WHERE VISIT_DATE=@TodayDate
			AND (@cabin_code=0 OR SECTION_ID IN (SELECT SECTION_ID FROM Master.SECTION_MASTER WHERE CABIN_CODE=@cabin_code))
			AND IS_ACTIVE=1
		 ) AS OccupyTime
	SET @occupyTime=ISNULL(@occupyTime,0)
	RETURN ISNULL(((@RemTime-@occupyTime)/@RemTime)*100 ,0)
END

GO


